name: rb3
summary: RB3 (Dragonboard 845) support package
description: |
 Support files for booting RB3 (Dragonboard 845) board
adopt-info: sign-assets
type: gadget
base: core22

architectures:
  - build-on: [amd64, arm64]
    build-for: arm64

confinement: strict
grade: stable

parts:
  prebuilt:
    plugin: dump
    source: prebuilt
    organize:
      '*': blobs/

  abl:
    plugin: nil
    source: https://git.launchpad.net/~ondrak/+git/edk2
    source-type: git
    source-branch: LE.UM.3.2.2.r1-02700-sdm845.0-uc20
    source-depth: 1
    override-build: |
      [ -e out ] && rm -rf out
      # make sure default python is 2.x
      mkdir -p bin
      ln -f -s $(which python2) bin/python
      # make sure we default to clang-11
      sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 100
      sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 100
      export PATH="${CRAFT_PART_BUILD}/bin:${PATH}"
      export ABL_GIT_COMMIT=$(git rev-parse HEAD)
      export CC=gcc
      export CXX=g++
      export LD=ld
      export AR=ar
      export LINUX_BOOT_CPU_SELECTION_ENABLED=1
      export TARGET_LINUX_BOOT_CPU_ID=7
      make -j 1 \
          'BUILD_SYSTEM_ROOT_IMAGE=0' \
          'CLANG_BIN=/usr/bin/' \
          'CLANG_PREFIX=/usr/bin/aarch64-linux-gnu-' \
          'TARGET_ARCHITECTURE=aarch64' \
          'BUILDDIR=${PWD}' \
          'BOOTLOADER_OUT=${PWD}/out' \
          'ENABLE_LE_VARIANT=false' \
          'VERIFIED_BOOT_LE=1' \
          'VERITY_LE=0' \
          'VERIFIED_BOOT=0' \
          'VERIFIED_BOOT_2=0' \
          'UBUNTU_CORE_BOOT=1' \
          'USER_BUILD_VARIANT=0' \
          'SIGNED_KERNEL=1' \
          'DISABLE_PARALLEL_DOWNLOAD_FLASH=1' \
          'ABL_USE_SDLLVM=false' \
          'ABL_SAFESTACK=false' \
          'AB_RETRYCOUNT_DISABLE=1' \
          'BOARD_BOOTLOADER_PRODUCT_NAME=SuperEDK2k' \
          -f makefile all
      cp out/Build/DEBUG_CLANG35/FV/abl.elf ${CRAFT_PART_INSTALL}/abl.elf.nonsecure
      # clean clang alternatives
      sudo update-alternatives --remove-all clang
      sudo update-alternatives --remove-all clang++
    organize:
      '*': blobs/

  firmware-blobs:
    plugin: dump
    source: http://snapshots.linaro.org/96boards/dragonboard845c/linaro/rescue/latest/dragonboard-845c-bootloader-ufs-linux-*.zip
    source-type: zip
    organize:
      '*/*': blobs/
    stage:
      - -dragonboard-8*
      - -blobs/flashall
      - -blobs/MD5SUMS.txt
      - -blobs/NON-HLOS.bin
      - -blobs/gpt_*0.bin
      - -blobs/gpt_*3.bin*
      - -blobs/gpt_*4.bin
      - -blobs/gpt_*5.bin
      - -blobs/gpt_main*
      - -blobs/abl.elf
      - -blobs/rawprogram*
      - -blobs/patch*

  gpt-partitions:
    plugin: nil
    source: qdl
    after:
      - partioning-tool
    override-build: |
      echo "Updating partition.xml sizes from gadget.yaml"
      convert_size() {
        case $1 in
          (0)  echo "0" ;;
          (*G | *g) echo $(expr $(echo ${1} | sed -e 's/G//g' -e 's/g//g') \* 1024 \* 1024) ;;
          (*M | *m) echo $(expr $(echo ${1} | sed -e 's/M//g' -e 's/m//g') \* 1024) ;;
          (*K | *k) echo $(echo ${1} | sed -e 's/K//g' -e 's/k//g') ;;
          (*) echo $(expr ${1} / 1024) ;;
        esac
      }
      for p_name in $(cat ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml | yq eval '.volumes.[].structure.[].name')
      do
        export p=${p_name}
        p_size=$(cat ${SNAPCRAFT_PROJECT_DIR}/gadget.yaml | yq eval '.volumes.[].structure.[] | select(.name == env(p)) | .size')
        p_size=$(convert_size ${p_size})
        echo -e "OK: partition: ${p_name} - ${p_size}"
        sed -i \
          -e 's/\"'"${p_name}"'-size\"/\"'"${p_size}"'\"/g' \
          partition.xml
      done
      python3 ${CRAFT_STAGE}/ptool.py -x partition.xml -t .
      [ -e rawprogram0_BLANK_GPT.xml ] && rm rawprogram*_BLANK_GPT.xml
      [ -e rawprogram0_WIPE_PARTITIONS.xml ] && rm rawprogram*_WIPE_PARTITIONS.xml
      cp rawprogram*.xml ${CRAFT_PART_INSTALL}
      cp patch*.xml ${CRAFT_PART_INSTALL}
      cp gpt_* ${CRAFT_PART_INSTALL}
    organize:
      '*': blobs/
    stage:
      - blobs/gpt_*0.bin
      - blobs/gpt_*3.bin*
      - blobs/gpt_*4.bin
      - blobs/gpt_*5.bin
      - blobs/patch*.xml
      - blobs/rawprogram*.xml

  snap-boot-sel-env:
    plugin: nil
    source: snap-boot-sel
    source-type: local
    override-pull: |
      craftctl default
      wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_common.h
      wget https://raw.githubusercontent.com/snapcore/snapd/master/include/lk/snappy_boot_v2.h
    override-build: |
      gcc lk-boot-env.c -I/usr/include/ -o lk-boot-env
      # configure initial boot environment
      ./lk-boot-env --runtime --write ${CRAFT_PART_INSTALL}/snapbootsel.bin \
                    --bootimg-file boot.img \
                    $( ./parse-yaml.sh ${CRAFT_PROJECT_DIR}/gadget.yaml runtime )
      ./lk-boot-env --recovery --write ${CRAFT_PART_INSTALL}/snaprecoverysel.bin \
                    --bootimg-file boot.img \
                    $( ./parse-yaml.sh ${CRAFT_PROJECT_DIR}/gadget.yaml recovery )
      ln -sf snaprecoverysel.bin ${CRAFT_PART_INSTALL}/lk.conf
    organize:
      snapbootsel.bin: blobs/snapbootsel.bin

  partioning-tool:
    plugin: dump
    source: https://github.com/kubiko/partitioning_tool.git
    source-depth: 1
    source-type: git
    organize:
      LICENSE: LICENSE_for_ptool
    prime:
      - -'*'

  sign-assets:
    plugin: nil
    after:
      - abl
      - firmware-blobs
    override-pull: |
      # allow custom source definition
      if [ -n "${GADGET_SNAP_SECTOOLS:-}" ]; then
        if [ -d ${GADGET_SNAP_SECTOOLS} ]; then
          ln -sf ${GADGET_SNAP_SECTOOLS} \
              ${CRAFT_PART_SRC}/sectools
        else
          git clone --depth 1 ${GADGET_SNAP_SECTOOLS} \
              ${CRAFT_PART_SRC}/sectools
        fi
      else
        git clone git+ssh://git.launchpad.net/~ondrak/+git/sectools -b v5.62 SecTools || true
        if [ ! -d SecTools ]; then
          echo "!! Missing env GADGET_SNAP_SECTOOLS pointing to sectools"
          echo "!! Produced snap won't be bootable"
        fi
      fi
    override-build: |
      cp ${CRAFT_STAGE}/blobs/abl.elf.nonsecure abl.elf
      VERSION="22-1"
      if [ -d SecTools ]; then
        python2 SecTools/sectools.py secimage \
          -v \
          -c SecTools/config/sdm845/sdm845_secimage.xml \
          -g abl \
          -i abl.elf \
          -o ${CRAFT_PART_INSTALL} \
          -sa
        ln -f ${CRAFT_PART_INSTALL}/sdm845/abl/abl.elf ${CRAFT_PART_INSTALL}/abl.elf.signed
        craftctl set version=${VERSION}
      else
        ln -f ${CRAFT_STAGE}/blobs/abl.elf.nonsecure ${CRAFT_PART_INSTALL}/abl.elf
        craftctl set version=${VERSION}-unsigned
      fi
    organize:
      '*': blobs/
      sdm845/abl/abl.elf: blobs/abl.elf
    stage:
      - blobs/abl.elf*

build-snaps:
  - yq

build-packages:
  - wget
  - python2
  - python3
  - clang-11
  - gwenhywfar-tools
  - build-essential
  - on arm64:
    - gcc
  - else:
    - gcc-aarch64-linux-gnu

slots:
  gpio-321:
    interface: gpio
    number: 321
  gpio-335:
    interface: gpio
    number: 335
  gpio-361:
    interface: gpio
    number: 361
  i2c-10:
    interface: i2c
    path: /dev/i2c-10
  i2c-11:
    interface: i2c
    path: /dev/i2c-11
  i2c-14:
    interface: i2c
    path: /dev/i2c-14
